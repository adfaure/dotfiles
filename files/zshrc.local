# vim:filetype=zsh foldmethod=marker autoindent expandtab shiftwidth=4
# Local variables:
# mode: sh
# End:

imagprint() {
    lp -h print.imag.fr:631 -d lig-copieur-439-nb $1
}

#. /home/adfaure/.nix-profile/etc/profile.d/nix.sh

#export Datamove nix-repo


export datamovepkgs=/home/adfaure/datamove-nix
export PATH=$PATH:$HOME/.cargo/bin
export PATH=$PATH:/home/adfaure/.gem/ruby/2.4.0/bin
export PATH=$PATH:$HOME/bin
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin

## Git alias

function proxy_on() {
    export no_proxy="localhost,127.0.0.1,localaddress,.localdomain.com"

    if (( $# > 0 )); then
        valid=$(echo $@ | sed -n 's/\([0-9]\{1,3\}.\)\{4\}:\([0-9]\+\)/&/p')
        if [[ $valid != $@ ]]; then
            >&2 echo "Invalid address"
            return 1
        fi

        export http_proxy="http://$1/" \
               https_proxy=$http_proxy \
               ftp_proxy=$http_proxy \
               rsync_proxy=$http_proxy

        echo "Proxy environment variable set."

        git config --global http.proxy "$http_proxy"
        return 0
    fi

    echo -n "username: "; read username
    if [[ $username != "" ]]; then
        echo -n "password: "
        read -es password
        local pre="$username:$password@"
    fi

    echo -n "server: "; read server
    echo -n "port: "; read port
    export http_proxy="http://$pre$server:$port/" \
           https_proxy=$http_proxy \
           ftp_proxy=$http_proxy \
           rsync_proxy=$http_proxy \
           HTTP_PROXY=$http_proxy \
           HTTPS_PROXY=$http_proxy \
           FTP_PROXY=$http_proxy \
           RSYNC_PROXY=$http_proxy
    git config --global http.proxy "$http_proxy"
}

function proxy_off(){
    unset http_proxy https_proxy ftp_proxy rsync_proxy \
          HTTP_PROXY HTTPS_PROXY FTP_PROXY RSYNC_PROXY
    git config --global --unset http.proxy
    echo -e "Proxy environment variable removed."
}


export TIMEFMT='%J   %U  user %S system %P cpu %*E total'$'\n'\
'avg shared (code):         %X KB'$'\n'\
'avg unshared (data/stack): %D KB'$'\n'\
'total (sum):               %K KB'$'\n'\
'max memory:                %M MB'$'\n'\
'page faults from disk:     %F'$'\n'\
'other page faults:         %R'

alias pacman="pacman --color=auto"
prompt adam2

bindkey -v

# Start ranger file navigator
alias r='ranger'

_ranger () {
 command ranger "$(pwd)" <$TTY
 print -n "\033[A"
 zle && zle -I
 cd "$(grep \^\' ~/.config/ranger/bookmarks | cut -b3-)"
}

zle -N _ranger
bindkey -v '^N' _ranger

bindkey '^a' history-incremental-search-backward

eval "$(direnv hook zsh)"

 # Mode vim
 bindkey -v

 # On remappe pour le bÃ©po
bindkey -a c vi-backward-char
bindkey -a r vi-forward-char
bindkey -a t vi-down-line-or-history
bindkey -a s vi-up-line-or-history
bindkey -a $ vi-end-of-line
bindkey -a 0 vi-digit-or-beginning-of-line
bindkey -a h vi-change
bindkey -a H vi-change-eol
bindkey -a dd vi-change-whole-line
bindkey -a l vi-replace-chars
bindkey -a L vi-replace
bindkey -a k vi-substitute

any-nix-shell zsh --info-right | source /dev/stdin
